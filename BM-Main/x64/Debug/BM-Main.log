  avr-g++ -MM -MG -DF_CPU=16000000 -I./include -mmcu=atmega328p -Wall -Wextra -Wconversion -std=c++17 -Os -fconcepts  -fno-exceptions -fno-unwind-tables -fno-rtti -fno-threadsafe-statics  -funsigned-char -funsigned-bitfields -fshort-enums  main.cc | sed "s/main\.o/& main.d/g" > main.d
  avr-g++ -mmcu=atmega328p -Wall -Wextra -Wconversion -std=c++17 -Os -fconcepts  -fno-exceptions -fno-unwind-tables -fno-rtti -fno-threadsafe-statics  -funsigned-char -funsigned-bitfields -fshort-enums  -DF_CPU=16000000 -I./include  -c -o main.o main.cc
  In file included from main.cc:14:0:
  uart.c: In function 'void __vector_19()':
uart.c(422,23): warning G63087B26: conversion to 'uint8_t {aka unsigned char}' from 'int' may alter its value [-Wconversion]
           UART0_CONTROL &= ~_BV(UART0_UDRIE);
                         ^
  main.cc: In function 'int main()':
main.cc(29,39): warning GA3802964: typedef 'using outB = class BMCPP::Hal::Port<BMCPP::AVR::B, BMCPP::AVR::ATMega328>' locally defined but not used [-Wunused-local-typedefs]
    using outB = BMCPP::Hal::Port<AVR::B>;
                                         ^
  In file included from main.cc:12:0:
  hal\port.h: In instantiation of 'static void BMCPP::Hal::Pin<Port, Number>::off() [with Port = BMCPP::Hal::Port<BMCPP::AVR::B, BMCPP::AVR::ATMega328>; unsigned char Number = 4]':
  SPI.h:88:13:   required from 'static void spi::SPI<clockRate, number, Master, MicroController>::spi0_init() [with spi::ClkRate clockRate = (spi::ClkRate)0; unsigned char number = 0; bool Master = true; MicroController = BMCPP::AVR::ATMega328]'
  main.cc:46:9:   required from here
hal\port.h(78,29): warning G63087B26: conversion to 'uint8_t {aka unsigned char}' from 'int' may alter its value [-Wconversion]
                   Port::get() &= ~mask;
                   ~~~~~~~~~~~~^~~~~~~~
  In file included from mega328.h:29:0,
                   from main.cc:11:
  register.h: In instantiation of 'void BMCPP::AVR::ControlRegister<Component, BitType, ValueType>::clear() [with Component = BMCPP::AVR::ATMega328::SPI; BitType = BMCPP::AVR::ATMega328::SPI::spcr; ValueType = unsigned char]':
  spi_hal.h:40:5:   required from 'static void BMCPP::Hal::SPI<number, MicroController>::clearSpcr() [with unsigned char number = 0; MicroController = BMCPP::AVR::ATMega328]'
  SPI.h:96:22:   required from 'static void spi::SPI<clockRate, number, Master, MicroController>::spi0_init() [with spi::ClkRate clockRate = (spi::ClkRate)0; unsigned char number = 0; bool Master = true; MicroController = BMCPP::AVR::ATMega328]'
  main.cc:46:9:   required from here
register.h(73,16): warning G63087B26: conversion to 'BMCPP::AVR::ControlRegister<BMCPP::AVR::ATMega328::SPI, BMCPP::AVR::ATMega328::SPI::spcr, unsigned char>::value_type {aka unsigned char}' from 'int' may alter its value [-Wconversion]
       hwRegister &= static_cast<value_type>(0);
       ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  avr-gcc -mmcu=atmega328p -Wall -Wextra -Wconversion -std=c11 -Os   -DF_CPU=16000000 -I./include  -Wl,-Map=main.map,--cref  "-Wl,--section-start=.mmcu=0x910000"  -o main.elf main.o
  ECHO ist ausgeschaltet (OFF).
  Creating load file for Flash: main.hex
  avr-objcopy -O ihex -R .flash main.elf main.hex
  avr-g++ -DF_CPU=16000000 -I./include -mmcu=atmega328p -Wall -Wextra -Wconversion -std=c++17 -Os -fconcepts  -fno-exceptions -fno-unwind-tables -fno-rtti -fno-threadsafe-statics  -funsigned-char -funsigned-bitfields -fshort-enums  -fverbose-asm -Wa,-adhln -S -o main.s main.cc
  In file included from main.cc:14:0:
  uart.c: In function 'void __vector_19()':
uart.c(422,23): warning G63087B26: conversion to 'uint8_t {aka unsigned char}' from 'int' may alter its value [-Wconversion]
           UART0_CONTROL &= ~_BV(UART0_UDRIE);
                         ^
  main.cc: In function 'int main()':
main.cc(29,39): warning GA3802964: typedef 'using outB = class BMCPP::Hal::Port<BMCPP::AVR::B, BMCPP::AVR::ATMega328>' locally defined but not used [-Wunused-local-typedefs]
    using outB = BMCPP::Hal::Port<AVR::B>;
                                         ^
  In file included from main.cc:12:0:
  hal\port.h: In instantiation of 'static void BMCPP::Hal::Pin<Port, Number>::off() [with Port = BMCPP::Hal::Port<BMCPP::AVR::B, BMCPP::AVR::ATMega328>; unsigned char Number = 4]':
  SPI.h:88:13:   required from 'static void spi::SPI<clockRate, number, Master, MicroController>::spi0_init() [with spi::ClkRate clockRate = (spi::ClkRate)0; unsigned char number = 0; bool Master = true; MicroController = BMCPP::AVR::ATMega328]'
  main.cc:46:9:   required from here
hal\port.h(78,29): warning G63087B26: conversion to 'uint8_t {aka unsigned char}' from 'int' may alter its value [-Wconversion]
                   Port::get() &= ~mask;
                   ~~~~~~~~~~~~^~~~~~~~
  In file included from mega328.h:29:0,
                   from main.cc:11:
  register.h: In instantiation of 'void BMCPP::AVR::ControlRegister<Component, BitType, ValueType>::clear() [with Component = BMCPP::AVR::ATMega328::SPI; BitType = BMCPP::AVR::ATMega328::SPI::spcr; ValueType = unsigned char]':
  spi_hal.h:40:5:   required from 'static void BMCPP::Hal::SPI<number, MicroController>::clearSpcr() [with unsigned char number = 0; MicroController = BMCPP::AVR::ATMega328]'
  SPI.h:96:22:   required from 'static void spi::SPI<clockRate, number, Master, MicroController>::spi0_init() [with spi::ClkRate clockRate = (spi::ClkRate)0; unsigned char number = 0; bool Master = true; MicroController = BMCPP::AVR::ATMega328]'
  main.cc:46:9:   required from here
register.h(73,16): warning G63087B26: conversion to 'BMCPP::AVR::ControlRegister<BMCPP::AVR::ATMega328::SPI, BMCPP::AVR::ATMega328::SPI::spcr, unsigned char>::value_type {aka unsigned char}' from 'int' may alter its value [-Wconversion]
       hwRegister &= static_cast<value_type>(0);
       ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
